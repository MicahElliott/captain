#! /bin/zsh

# Detect FIXMEs, TODOs, etc in input file

# Ported from git-confirm: https://github.com/pimterry/git-confirm
# Problems with git-confirm that break magit:
# - prints too much color
# - too much context
# - breaks non-CAPT_VERBOSE mode
# - is more complex than needed
# - does unwanted things with tty
# - maybe can't have it interactive

autoload -U colors; colors

# If we have a STDIN, use it, otherwise get one
# if tty >/dev/null 2>&1; then TTY=$(tty); else TTY=/dev/tty; fi

check_file() {
    local file=$1 match_pattern=$2
    local file_changes_with_context=$(git diff -U999999999 -p --cached --color=never -- $file)
    # From the diff, get the green lines starting with '+' and including '$match_pattern'
    local matched_additions=$(echo "$file_changes_with_context" | grep -C1 $'^\+.*'"$match_pattern")
    if   [[ -n "$matched_additions" ]]
    then
         print "${fg[red]}WARN: Additions to ‘$file’ match ‘$match_pattern’:$reset_color\n$matched_additions"
         haserror=1
         # printf -v prompt "${fg[red]}WARN: Additions to ‘$file’ match ‘$match_pattern’:$reset_color\n$matched_additions\nproceed? y/n> "
         # print "\n\n"
         # if ! read -q "?$prompt"; then print "\n"; exit 1; fi
         # print "\n\n"
    fi
}

checks=${CAPT_FIXCHECKS-'FIXME,TODO,HACK,HOLD,FAIL,HACK,REVIEW,REFACTOR,XXX,HOLD'}
checks=( ${(s:,:)checks} )

# for file in `git diff --cached -p --name-status | cut -c3-`; do
for file in $@; do
    # if [[ ! -v CAPT_VERBOSE ]]
    #    # FIXME Don't actually abort with this message until a fixme is detected
    # then print 'ERROR: Aborting since cannot run without ‘CAPT_VERBOSE=1’ set/exported'
    #      print '       Use to bypass: export CAPT_BLACK_TRIGGERS=fixcheck'
    #      exit 1
    # fi
    for match_pattern in $checks; do check_file $file $match_pattern; done
    if [[ -v haserror ]]; then print "ERROR: Failing due to detected violations."; exit 1; fi
done
